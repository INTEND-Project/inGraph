version: '3.8'

services:
  # GraphDB Service
  graphdb:
    image: ontotext/graphdb:10.6.2
    container_name: graphdb-container
    ports:
      - "7200:7200"
    environment:
      - GDB_HEAP_SIZE=2g
      - GDB_JAVA_OPTS=-Xmx2g -Xms1g
    volumes:
      - graphdb_data:/opt/graphdb/home
      - graphdb_work:/opt/graphdb/work
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7200/rest/repositories"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Flask Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-app-container
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PYTHONUNBUFFERED=1
      - GRAPHDB_BASE_URL=http://graphdb:7200
    volumes:
      # Mount source code for hot reloading
      - .:/app
      # Mount uploads directory
      - ./uploads:/app/uploads
      # Exclude __pycache__ and .git from volume mount
      - /app/__pycache__
      - /app/.git
    networks:
      - app-network
    depends_on:
      graphdb:
        condition: service_healthy
    restart: unless-stopped
    command: python inGraphApp.py

# Named volumes for GraphDB data persistence
volumes:
  graphdb_data:
    driver: local
  graphdb_work:
    driver: local

# Custom network for service communication
networks:
  app-network:
    driver: bridge
